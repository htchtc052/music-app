// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Genders {
  NOT_SPECIFIED
  FEMALE
  MALE
}

model User {
  id              Int       @id @default(autoincrement())
  username        String
  email           String    @unique
  password        String
  firstname       String?
  lastname        String?
  birthday        DateTime?
  gender          Genders?  @default(NOT_SPECIFIED)
  activationToken String?
  activatedAt     DateTime?
  isAdmin         Boolean   @default(false)
  tokens          Token[]
  tracks          Track[]
  deletedAt       DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime? @updatedAt

  @@map(name: "users")
}

model Track {
  id                Int        @id @default(autoincrement())
  title             String
  private           Boolean    @default(false)
  keywords          String[]
  description       String?
  hiddenDescription String?
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  deletedAt         DateTime?
  userId            Int
  user              User       @relation(fields: [userId], references: [id])
  file              TrackFile?

  @@map(name: "tracks")
}

model TrackFile {
  id       Int    @id @default(autoincrement())
  filePath String
  fileName String
  fileSize Int    @default(0)
  mimetype String
  track    Track  @relation(fields: [trackId], references: [id])
  trackId  Int    @unique

  @@map(name: "tracks_files")
}

model Token {
  id           String   @id @default(uuid())
  userId       Int
  refreshToken String
  expiresAt    DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map(name: "tokens")
}
